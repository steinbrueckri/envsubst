
name: Build, push and deploy
on: push
env:
  IMAGE_TAG: ${{ github.sha }}
  IMAGE: ${{ github.repository }}
jobs:
#------------------------------------------------------------------------------
# Pre Build Testing
#------------------------------------------------------------------------------
  pre-build-tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Markdown test
        uses: actionshub/markdownlint@master

      - name: Dockerfile test
        uses: burdzwastaken/hadolint-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HADOLINT_ACTION_DOCKERFILE_FOLDER: .

#------------------------------------------------------------------------------
# Build
#------------------------------------------------------------------------------
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build and push Docker image
        run: |
          docker build -t ${IMAGE}:${IMAGE_TAG} .

#------------------------------------------------------------------------------
# Post Build Tests
#------------------------------------------------------------------------------
  post-build-tests:
    name: Run tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run container-structure-test tests
        run: |
          curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64 && chmod +x container-structure-test-linux-amd64 && mkdir -p $HOME/bin && export PATH=$PATH:$HOME/bin && mv container-structure-test-linux-amd64 $HOME/bin/container-structure-test
          container-structure-test test --image ${IMAGE}:${IMAGE_TAG} --config structure_test.yaml

#------------------------------------------------------------------------------
# Release
#------------------------------------------------------------------------------
  release:
    name: Create release
    needs: post-build-tests
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Tag and push Docker image
        run: |
          DOCKERHUB_USERNAME=`echo "${IMAGE}" | awk -F"/" '{print $1}'`
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u $DOCKERHUB_USERNAME --password-stdin
          # create version tag
          docker tag ${IMAGE}:${IMAGE_TAG} ${IMAGE}:${{ steps.get_version.outputs.VERSION }}
          # create latest tag
          docker tag ${IMAGE}:${IMAGE_TAG} ${IMAGE}:latest
          # 
          docker push ${IMAGE}

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release/${{ env.IMAGE_TAG }}
          release_name: Release ${{ env.IMAGE_TAG }}
          prerelease: false
